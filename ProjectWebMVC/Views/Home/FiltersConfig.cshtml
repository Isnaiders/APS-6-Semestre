@using ProjectWebMVC.Models.Enum
@model FiltersViewModel

@{
	Layout = "_LayoutModal";
	var nameButton = Model.Type == FilterType.ZoomIn ? "OK" : "Selecionar";
}

@if (Model.Type == FilterType.Shine || Model.Type == FilterType.Contrast)
{
	<div class="ibox">
		<div class="row">
			<div class="col-md-12">
				<label>Vermelho:</label>
				@Html.TextBoxFor(m => m.FiltersConfig.Red, new { Placeholder = "Tonalidade de vermelho", Class = "col-md-10" })
				@Html.HiddenFor(m => m.FiltersConfig.Red, Model.FiltersConfig.Red)
				@Html.ValidationMessageFor(m => m.FiltersConfig.Red, "", new { Class = "text-danger" })
			</div>
		</div>
		<br />
		<div class="row">
			<div class="col-md-12">
				<label>Verde:&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</label>
				@Html.TextBoxFor(m => m.FiltersConfig.Green, new { Placeholder = "Tonalidade de verde", Class = "col-md-10"})
				@Html.HiddenFor(m => m.FiltersConfig.Green, Model.FiltersConfig.Green)
				@Html.ValidationMessageFor(m => m.FiltersConfig.Green, "", new { Class = "text-danger" })
			</div>
		</div>
		<br />
		<div class="row">
			<div class="col-md-12">
				<label>Azul:&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</label>
				@Html.TextBoxFor(m => m.FiltersConfig.Blue, new { Placeholder = "Tonalidade de azul", Class = "col-md-10" })
				@Html.HiddenFor(m => m.FiltersConfig.Blue, Model.FiltersConfig.Blue)
				@Html.ValidationMessageFor(m => m.FiltersConfig.Blue, "", new { Class = "text-danger" })
			</div>
		</div>
	</div>
}

@if (Model.Type == FilterType.Quantization)
{
	<div class="ibox">
		<div class="row">
			<div class="col-md-12">
				<label>Insira o valor da quantização:</label>
				@Html.TextBoxFor(m => m.FiltersConfig.Quantization, new { Placeholder = "Valor da quantização", Class = "col-md-12" })
				@Html.HiddenFor(m => m.FiltersConfig.Quantization, Model.FiltersConfig.Quantization)
				@Html.ValidationMessageFor(m => m.FiltersConfig.Quantization, "", new { Class = "text-danger" })
			</div>
		</div>
	</div>
}

@if (Model.Type == FilterType.AntiClockwiseRotation || Model.Type == FilterType.ClockwiseRotation)
{
	<div class="ibox">
		<div class="row">
			<div class="col-md-12">
				<div class="form-group">
					<label>Informe os graus de rotação:</label>
					<select asp-for="FiltersConfig.Rotation" class="drop-select" asp-items="Html.GetEnumSelectList<EnumRotation>()"></select>
					@Html.HiddenFor(m => m.FiltersConfig.Rotation, Model.FiltersConfig.Rotation)
				</div>
			</div>
		</div>
	</div>
}

@if (Model.Type == FilterType.ZoomIn)
{
	<div class="ibox">
		<div class="row">
			<div class="col-md-12">
				<p>Está opção irá dobrar a resolução da imagem e consequentemente vai aumentar o tamanho do arquivo.</p>
				<p>Para ver este resultado será necessário baixar a imagem após aplicar o filtro.</p>
			</div>
		</div>
	</div>
}

@if (Model.Type == FilterType.ZoomOut)
{
	<div class="ibox">
		<div class="row">
			<div class="col-md-12">
				<label>Informe a quantidade de zoom no eixo do X:</label>
				@Html.TextBoxFor(m => m.FiltersConfig.ZoomX, new { Placeholder = "Valor do eixo X", Class = "col-md-12"})
				@Html.HiddenFor(m => m.FiltersConfig.ZoomX, Model.FiltersConfig.ZoomX)
				@Html.ValidationMessageFor(m => m.FiltersConfig.ZoomX, "", new { Class = "text-danger" })
			</div>
		</div>
		<br />
		<div class="row">
			<div class="col-md-12">
				<label>Informe a quantidade de zoom no eixo do Y:</label>
				@Html.TextBoxFor(m => m.FiltersConfig.ZoomY, new { Placeholder = "Valor do eixo Y", Class = "col-md-12"})
				@Html.HiddenFor(m => m.FiltersConfig.ZoomY, Model.FiltersConfig.ZoomY)
				@Html.ValidationMessageFor(m => m.FiltersConfig.ZoomY, "", new { Class = "text-danger" })
			</div>
		</div>
		<br />
		<div class="row">
			<div class="col-md-12">
				<p>Colocar números menores que 1 ou da mesma resolução da imagem escolhida não afetará na redução da imagem.</p>
			</div>
		</div>
	</div>
}

<div class="row">
	<div class="col-md-4"></div>
	<div class="col-md-4">
		<div style="margin-bottom: 10px;">
			<button onclick="getFiltersConfig()" class="btn-slide"><span>@nameButton</span></button>
		</div>
	</div>
	<div class="col-md-4"></div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script>
		function getFiltersConfig() {
			var red = $('#FiltersConfig_Red').val();
			var green = $('#FiltersConfig_Green').val();
			var blue = $('#FiltersConfig_Blue').val();
			var quantization = $('#FiltersConfig_Quantization').val();
			var rotation = $('#FiltersConfig_Rotation').val();
			var zoomX = $('#FiltersConfig_ZoomX').val();
			var zoomY = $('#FiltersConfig_ZoomY').val();
			parent.setFiltersConfig(red, green, blue, quantization, rotation, zoomX, zoomY);
			parent.closeModal();
		};
	</script>
}